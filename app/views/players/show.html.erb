<div class="d-flex justify-content-end mb-2">
  <%= render "season_selector" %>
</div>
<div class="container my-5">
  <%= render 'players/show/profile_header', player: @player %>
  <%= render 'players/show/stats', player: @player %>
  <%= render 'players/show/balance_chart', player: @player if @stat.total_matches > 0 %>
  <%= render 'players/show/participation_history', player: @player %>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("turbo:load", drawBalanceChart);
    document.addEventListener("turbolinks:load", drawBalanceChart);

    function drawBalanceChart() {
        const ctx = document.getElementById('balanceChart');
        if (!ctx) return;

        const chartContext = ctx.getContext('2d');
        const balanceData = <%= raw @chart_data[:balance].to_json %>;
        const labels = <%= raw @chart_data[:dates].to_json %>;

        if (window.balanceChartInstance) {
            window.balanceChartInstance.destroy();
        }

        window.balanceChartInstance = new Chart(chartContext, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Balance (Victorias - Derrotas)',
                    data: balanceData,
                    fill: {
                        target: 'origin',
                        above: 'rgba(75, 192, 192, 0.2)',  // Verde claro para positivo
                        below: 'rgba(255, 99, 132, 0.2)'   // Rojo claro para negativo
                    },
                    tension: 0.1,
                    borderWidth: 2,
                    borderColor: 'rgba(0,0,0,0)', // invisible, lo pinta el segment
                    segment: {
                        borderColor: ctx =>
                            (ctx.p0.parsed.y < 0 || ctx.p1.parsed.y < 0)
                                ? 'rgba(255, 99, 132, 1)'  // rojo para negativo
                                : 'rgba(75, 192, 192, 1)'  // verde para positivo
                    }
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: { title: { display: true, text: 'Fecha' } },
                    y: {
                        title: { display: true, text: 'Balance acumulado' },
                        suggestedMin: Math.min(...balanceData) - 1,
                        suggestedMax: Math.max(...balanceData) + 1
                    }
                }
            }
        });
    }
</script>
